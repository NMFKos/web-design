<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OneHouse</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="/css/home.css">
</head>
<body>
    <div class="webpage">
        <div class="search-container middle-over">
            <select id="house-select" class="form-select" aria-label="Default select example">
                <option selected>Phòng trọ, nhà trọ</option>
                <option>Căn hộ 1PN</option>
                <option>Căn hộ 2PN</option>
                <option>Căn hộ Duplex</option>
                <option>Căn hộ Studio</option>
            </select>
            <select id="district-select" class="form-select" aria-label="Default select example">
                <option selected>TP. Hồ Chí Minh</option>
                <option>Bình Thạnh</option>
                <option>Quận 1</option>
                <option>Quân 3</option>
                <option>Quận 10</option>
                <option>Phú Nhuận</option>
                <option>Tân Bình</option>
            </select>
            <select id="price-select" class="form-select" aria-label="Default select example">
                <option selected>Chọn giá tiền</option>
                <option>4 đến 5 triệu đồng</option>
                <option>5 đến 7 triệu đồng</option>
                <option>7 đến 10 triệu đồng</option>
                <option>Trên 10 triệu đồng</option>
            </select>
            <select id="area-select" class="form-select" aria-label="Default select example">
                <option selected>Chọn diện tích</option>
                <option>25m2 đến 30m2</option>
                <option>30m2 đến 35m2</option>
                <option>35m2 đến 40m2</option>
                <option>40m2 đến 50m2</option>
            </select>
            <button class="search-button">Search</button>
        </div>
        <!-- https://cdn3.ivivu.com/2023/10/du-lich-sai-gon-ivivu.jpg -->
        <div class="background-image"></div>
        <div class="preview">
            <div id="carouselExampleIndicators" class="carousel slide middle-over" data-ride="carousel">
                <ol class="carousel-indicators">
                <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
                </ol>
                <div class="carousel-inner">
                <div class="carousel-item active">
                    <img class="d-block w-100" src="/imgs/q10.jpg" alt="First slide">
                </div>
                <div class="carousel-item">
                    <img class="d-block w-100" src="/imgs/tanbinh.jpg" alt="Second slide">
                </div>
                <div class="carousel-item">
                    <img class="d-block w-100" src="/imgs/tanbinh2.jpg" alt="Third slide">
                </div>
                </div>
                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
                </a>
            </div>
        </div>
        <div>
            <ul class="list-group list-group-char">
                {{#each postData}}
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="d-flex">
                        <!-- Hình ảnh (đặt mã hình ảnh ở đây) -->
                        <img src="{{this.thumbnailData}}" alt="Thumbnail of post" class="image-char">
                        <!-- Chữ bên trái của hình ảnh -->
                        <div class="content-frame">
                            <div class="content-first">
                                <div class="price-border">
                                    {{this.price}} triệu VND/tháng
                                </div>
                                <div style="gap: 20px; display:flex">
                                    <a href="#" style="text-decoration: none; color: black">
                                        <i class="fa-solid fa-arrow-up-from-bracket" id="share-icon"></i>
                                    </a>
                                    <a href="#" style="text-decoration: none; color: black">
                                        <i class="fa-regular fa-heart" id="heart-icon"></i>
                                    </a>
                                </div>
                            </div>
                            <div class="content-second">
                                <div style="font-weight:bold; font-size:large;">
                                    {{this.title}}
                                </div>
                                <div style="font-size:medium;">
                                    {{this.description}}
                                </div>
                                <div>
                                    <i class="fa-solid fa-location-dot"></i>
                                    <span style="font-size: large;">{{this.address}}</span>
                                </div>
                            </div>
                            <div class="content-third">
                                <div class="view-border">
                                    <a href="/phong-tro/{{this.slug}}" style="text-decoration: none; color: white">
                                        Xem chi tiết
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </li>
                {{/each}}
            </ul>
        </div>
        <div class="chatbox">
        <div class="chatbox-support">
            <div class="chatbox-header">
                TroGPT
            </div>
            <div id="chatbox-history"></div>
            <form id="chat-form" class="chatbox-footer">
                <input type="text" id="user-input" placeholder="Enter your message">
                <button type="submit">Gửi</button>
            </form>
        </div>
        <div class="chatbox-button">
            <button>Branch-1</button>
        </div>
        </div>
    </div>
    <script src="../../app/controllers/Chat.js"></script>
    <script>
        class InteractiveChatbox {
            constructor(a, b, c) {
                this.args = {
                    button: a,
                    chatbox: b
                }
                this.icons = c;
                this.state = false; 
            }

            display() {
                const {button, chatbox} = this.args;
                
                button.addEventListener('click', () => this.toggleState(chatbox))
            }

            toggleState(chatbox) {
                this.state = !this.state;
                this.showOrHideChatBox(chatbox, this.args.button);
            }

            showOrHideChatBox(chatbox, button) {
                if(this.state) {
                    chatbox.classList.add('chatbox--active')
                    this.toggleIcon(true, button);
                } else if (!this.state) {
                    chatbox.classList.remove('chatbox--active')
                    this.toggleIcon(false, button);
                }
            }

            toggleIcon(state, button) {
                const { isClicked, isNotClicked } = this.icons;
                let b = button.children[0].innerHTML;

                if(state) {
                    button.children[0].innerHTML = isClicked; 
                } else if(!state) {
                    button.children[0].innerHTML = isNotClicked;
                }
            }
        }
        const chatHistory = document.getElementById('chatbox-history');
        const userInput = document.getElementById('user-input');
        const form = document.getElementById('chat-form');

        async function sendMessage() {
        const userMessage = userInput.value;
        userInput.value = ''; // Clear input field
        console.log(userMessage)
        try {
            chatHistory.innerHTML += `<div class="user-message">${userMessage}</div>`;
            const response = await fetch('/chat', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 'userInput': userMessage }),
            });

            const data = await response.json();
            console.log(data)
            const botMessage = data.response;
            console.log(botMessage)
            // Add chat message to the chat history
            chatHistory.innerHTML += `<div class="bot-message">${botMessage}</div>`;

            // Scroll to the bottom of the chat history
            chatHistory.scrollTop = chatHistory.scrollHeight;
        } catch (error) {
            console.error('Error:', error);
            // Handle errors gracefully, e.g., display an error message to the user
        }
        }

        form.addEventListener('submit', (event) => {
            event.preventDefault(); // Prevent form submission
            const loader = document.getElementById('loader');
            //loader.style.display = 'none'; // Show the loader
            sendMessage().finally(() => {
           // loader.style.display = 'none'; // Hide the loader after the message is sent
            });;
        });


        //Open chat button
        const charForm = document.getElementById('chat-form')
        const chatButton = document.querySelector('.chatbox-button');
        const chatContent = document.querySelector('.chatbox-support');
        const icons = {
            isClicked: '</p>Close</p>',
            isNotClicked: '<p>Open chatbot</p>'
        }
        const chatbox = new InteractiveChatbox(chatButton, chatContent, icons);
        chatbox.display();
        chatbox.toggleIcon(false, chatButton);
    </script>
    
</body>
</html>